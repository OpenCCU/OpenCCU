function _typeof(obj){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj;}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;},_typeof(obj);}var xnm=xnm||{};xnm.aio=xnm.aio||{},xnm.aio.philips=xnm.aio.philips||{},xnm.aio.philips.JointSpaceTV=function(){var TV=function TV(e,t,i,n){this._logger=require("x.logger.js").getLogger("xnm.aio.philips.JointSpaceTV"),this.ip=e,this.port=t,(!t||t<0)&&(this.port=1925),this.username=i,this.password=n;};return TV.prototype._executeCommand=function(e,t){if(e)switch(e){case"tv":case"satellite":case"hdmi1":case"hdmi2":case"hdmi3":case"hdmiside":case"ext1":case"ext2":case"ypbpr":case"vga":this._setSource(e,t);break;default:this._inputKey(e,t);}else t&&t(new Error("code is empty"));},TV.prototype._inputKey=function(e,t){var i={key:e};this._doRequest("POST","/1/input/key",i,function(e){t&&t(e);});},TV.prototype._setSource=function(e,t){var i={id:e};this._doRequest("POST","/1/sources/current",i,function(e){t&&t(e);});},TV.prototype._setChannel=function(e,t){var i={id:e};this._doRequest("POST","/1/channels/current",i,function(e){t&&t(e);});},TV.prototype._doRequest=function(e,t,i,n){var o=this,s="http://"+this.ip+":"+this.port+t,r=n;i&&"object"==_typeof(i)&&(i=JSON.stringify(i)),this._logger.log("trace","send "+e+" req to:"+s+" data:"+i),$.ajax({url:s,type:e,timeout:3e3,data:"POST"==e?i:null,cache:!1,headers:{"Content-Type":"application/json; charset=UTF-8","Content-Length":i?i.length:0},username:this.username,password:this.password,success:function success(e){o._logger.log("trace","http request success:"+e),n&&n(null,e);},error:function error(e,t){var i="http request error:"+(e?e.status:"0")+"-"+t;r&&(r(new Error(i)),r=null);}});},TV;}(),xnm.aio.philips.Handler=function(){var Handler=function Handler(){};return Handler.prototype.JointSpaceTV=xnm.aio.philips.JointSpaceTV,Handler;}(),"undefined"!=typeof module&&null!=module&&(module.exports=new xnm.aio.philips.Handler());