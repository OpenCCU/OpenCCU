var x=x||{};x.hub=x.hub||{},x.hub.m=x.hub.m||{},x.hub.m.mbus=x.hub.m.mbus||{},x.hub.m.mbus.MODULE=require("xnm.aio.mbus.js"),x.hub.m.mbus.Monitor=function(){var UdpEventProducer_sendSTAEvent=function UdpEventProducer_sendSTAEvent(t){var o=require("x.hub.eventbus.js");o.emit("gatewayevent",t,{address:"MBUS"},"STA"),o.emit("udpevent",t,"STA");},Monitor=function Monitor(){this._logger=require("x.logger.js").getLogger("x.hub.m.mbus.Monitor"),this._port=null,this._bus=null,this._statesBuffer={};};return Monitor.DEFAULT_PORT="/dev/mediolabus",Monitor.prototype.start=function(t){if(this._port=t,this._port||(this._port=Monitor.DEFAULT_PORT),this._logger.log("info","start monitor port:"+this._port),null==this._bus){var o=this;this._bus=new x.hub.m.mbus.MODULE.MediolaBus(this._port),this._bus.on("data",function(t){o._logger.log("trace","receive mbus data:"+JSON.stringify(t)),o._onData(t);}),this._bus.on("error",function(t){o._logger.log("warn","mbus error:"+t.message);}),this._bus.open();}},Monitor.prototype.stop=function(){this._bus.on("data",null),this._bus.on("error",null),this._bus.close(),this._bus=null;},Monitor.prototype.executeCommand=function(t,o,e){this._bus?t&&t.address&&t.type&&t.data?o&&o.command?(this._logger.log("trace",'execute command "'+o.command+'" for device '+JSON.stringify(t)),this._bus.executeCommand(t,o.command),e&&e()):e&&e(new Error("invalid command")):e&&e(new Error("invalid device")):e&&e(new Error("mbus not connect"));},Monitor.prototype.getBufferedStates=function(){return this._statesBuffer;},Monitor.prototype.updateStates=function(t,o){this._logger.log("trace","update state for devices "+JSON.stringify(t)),this._bus.updateStates(t),o&&o();},Monitor.prototype._onData=function(t){if(t&&t.source){this._statesBuffer[t.source];var o={states:t,timestamp:new Date().getTime()};this._statesBuffer[t.source]=o;var e={type:"MBUS",adr:t.source,state:t};UdpEventProducer_sendSTAEvent(e);}},Monitor;}(),x.hub.m.mbus.Handler=function(){var Handler=function Handler(){this._logger=require("x.logger.js").getLogger("x.hub.m.mbus.Handler"),this._monitor=null;};return Handler.prototype.init=function(t){var o=this,e=require("x.hub.eventbus.js");e.on("x.hub.peripheralman.ADD_MBUS",function(t){o._logger.log("debug","mbus usb connected"),o._logger.log("info","start mbus monitor"),o._start();}),e.on("x.hub.peripheralman.REMOVE_MBUS",function(t){o._logger.log("debug","mbus usb disconnected"),o._logger.log("info","stop mbus monitor"),o._stop();}),global.MBUS_PORT&&"A20"!=global.PLATFORM&&"PI-CM3+"!=global.PLATFORM&&(this._logger.log("info","connect mbus usb:"+global.MBUS_PORT),this._start()),t&&t();},Handler.prototype._start=function(){this._monitor||(this._monitor=new x.hub.m.mbus.Monitor(),this._monitor.start(global.MBUS_PORT));},Handler.prototype._stop=function(){this._monitor&&(this._monitor.stop(),this._monitor=null);},Handler.prototype.getSystems=function(){return["mbus"];},Handler.prototype.getAllStatesLegacy=function(t){if(this._monitor){var o=[],e=this._monitor.getBufferedStates();if(e)for(var r in e){var s={type:"MBUS",adr:r,state:e[r].states};o.push(s);}t&&t({data:o});}else t&&t({data:[]});},Handler.prototype.executeCommandLegacy=function(t,o){this._monitor?t&&t.address&&t.subtype&&t.data&&t.command?this._monitor.executeCommand({address:t.address,type:t.subtype,data:t.data},{command:t.command},function(t){o&&o({error:t});}):o&&o({error:new Error("command invalid")}):o&&o({error:new Error("mbus module not running")});},Handler.prototype.updateStates=function(t,o){this._monitor?t&&t.length?this._monitor.updateStates(t,function(t){o&&o({error:t});}):o&&o({error:new Error("no address")}):o&&o({error:new Error("mbus module not running")});},Handler.prototype.dummyMbusMessage=function(t,o){t?this._monitor?(this._monitor._onData(t),o&&o()):o&&o({error:{message:"mbus module not running"}}):o&&o({error:{message:"invalid message"}});},Handler;}(),"undefined"!=typeof exports&&"undefined"!=typeof module&&module.exports&&(exports=module.exports=new x.hub.m.mbus.Handler());