function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);Object.defineProperty(Constructor,"prototype",{writable:false});return Constructor;}var x=x||{};x.hub=x.hub||{},x.hub.m=x.hub.m||{},x.hub.m.gira=x.hub.m.gira||{},x.hub.m.gira.MODULE=require("xnm.aio.gira.js"),x.hub.m.gira.EventHandler=/*#__PURE__*/function(){function GiraHubEventHandler(){_classCallCheck(this,GiraHubEventHandler);this._logger=require("x.logger.js").getLogger("x.hub.m.gira.EventHandler"),this._observedDevices={},this._observedDataPoints={};}_createClass(GiraHubEventHandler,[{key:"observeDeviceAndDataPoint",value:function observeDeviceAndDataPoint(e,t){this._observedDevices[e.address]||(this._observedDevices[e.address]=e);var a=e.supportedDataPoints.find(function(e){return e.dataPointName==t.statusKey;});a?(this._observedDataPoints[a.dataPointUid]||(this._observedDataPoints[a.dataPointUid]={funcionId:e.address,lastValue:null,dataPointName:a.dataPointName}),this._logger.log("debug","observing ".concat(t.statusKey,"(").concat(a.dataPointUid,") of ").concat(e.name,"(").concat(e.address,")"))):this._logger.log("error","can not get dataPointInfo of ".concat(t.statusKey,":").concat(e.address));}},{key:"valueEventHandler",value:function valueEventHandler(e){var _this=this;try{if(!e||!e.events||!e.token)return void this._logger.log("warn","bad access");this._logger.log("debug","events received : ".concat(JSON.stringify(e.events))),e.events.forEach(function(e){var t=_this._observedDataPoints[e.uid];if(!t)return;var a=_this._observedDevices[t.funcionId];if(!a)return void _this._logger.log("error","critical - we do not have device data for ".concat(e.id,":").concat(t));var r=e.value,s=t.lastValue;if(r==s)return;var i=t.dataPointName;_this._produceEvent(a,i,s,r),t.lastValue=e.value;});}catch(e){this._logger.log("error",e.stack?e.stack:e);}}},{key:"_produceEvent",value:function _produceEvent(e,t,a,r){if(a!=r){this._logger.log("trace","receive new status:"+JSON.stringify({address:e.address,key:t,value:r}));var s={key:t,value:r,oldvalue:a,changed:!0};require("x.hub.eventbus.js").emit("status",{module:"gira",device:e,gateway:e.gateway,data:s});}}}]);return GiraHubEventHandler;}(),x.hub.m.gira.Handler=/*#__PURE__*/function(){function GiraHubHandler(){_classCallCheck(this,GiraHubHandler);this.ROUTES_BASE="/gira",this.eventHandler=new x.hub.m.gira.EventHandler(),this._logger=require("x.logger.js").getLogger("x.hub.m.gira.Handler");}_createClass(GiraHubHandler,[{key:"init",value:function init(e){e&&e();}},{key:"getSystems",value:function getSystems(){return["gira"];}},{key:"addStateDevice",value:function addStateDevice(e,t,a){this.eventHandler.observeDeviceAndDataPoint(e,a),t&&t();}},{key:"getState",value:function getState(e,t,a){e?e.gateway?x.hub.m.gira.MODULE.doStatus("xhub",e,{value:t},function(e,t){e?a&&a({error:e}):t?a&&a({data:{value:t.status}}):a&&a({error:new Error("do status failed")});}):a&&a(new Error("device gateway format invalid")):a&&a({error:new Error("device json format invalid")});}},{key:"executeCommand",value:function executeCommand(e,t,a){x.hub.m.gira.MODULE.doCommand(e,t,a);}},{key:"checkDeviceMatch",value:function checkDeviceMatch(e,t){return!!(t&&t.device&&e&&e.device)&&!(!t.gateway||!e.gateway)&&t.gateway.ip==e.gateway.ip&&t.device.address==e.device.address;}},{key:"addRoutes",value:function addRoutes(e){var _this2=this;e.addRoute("".concat(this.ROUTES_BASE,"/events/value"),{method:"POST",auth:0},function(e,t,a){try{t.json("event received"),_this2.eventHandler.valueEventHandler(JSON.parse(e.body));}catch(e){_this2._logger.log("error",e.stack?e.stack:e);}});}}]);return GiraHubHandler;}(),"undefined"!=typeof exports&&"undefined"!=typeof module&&module.exports&&(exports=module.exports=new x.hub.m.gira.Handler());