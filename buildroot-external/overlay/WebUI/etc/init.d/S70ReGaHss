#!/bin/sh
#
# Starts ReGaHss.
#

CREATE_DIRS='/usr/local/etc/config/rc.d /usr/local/etc/config/addons/www'

LOGLEVEL_REGA=2
PIDFILE=/var/run/ReGaHss.pid

source /var/hm_mode 2>/dev/null

# skip this startup in LAN Gateway mode
[[ "${HM_MODE}" == "HM-LGW" ]] && exit 0

init() {
  for i in ${CREATE_DIRS}; do
    mkdir -p ${i}
  done
       
  if [ ! -d /etc/config/userprofiles ] ; then
    mkdir /etc/config/userprofiles
  fi

  if [ -e /etc/config/syslog ] ; then
    . /etc/config/syslog
  fi

  # source profile.d files
  if [[ ! -e /etc/config/safemode ]] ; then
    # source from /etc/profile.d
    for i in /etc/profile.d/*.sh ; do
      if [[ -r "$i" ]]; then
        . $i
      fi
      unset i
    done

    # source from /usr/local/etc/profile.d
    if [[ -d /usr/local/etc/profile.d ]]; then
      for i in /usr/local/etc/profile.d/*.sh ; do
        if [[ -r "$i" ]]; then
          . $i
        fi
        unset i
      done
    fi
  fi
}

waitStartupComplete() {
  STEPS=20
  for i in $(seq 1 ${STEPS}); do
    sleep 2
    echo -n "."
    if [[ -n "$(pidof ReGaHss)" ]]; then
      echo "OK"
      break
    fi
    if [[ ${i} -eq ${STEPS} ]]; then
      echo "ERROR"
    fi
  done
}

waitTerminationComplete() {
  STEPS=20
  for i in $(seq 1 ${STEPS}); do
    sleep 2
    echo -n "."
    if [[ -z "$(pidof ReGaHss)" ]]; then
      echo "OK"
      break
    fi
    if [[ ${i} -eq ${STEPS} ]]; then
      echo "ERROR"
    fi
  done
}

start() {
  echo -n "Starting ReGaHss: "
  init
  start-stop-daemon -S -q -b -m -p ${PIDFILE} --exec /bin/ReGaHss -- -f /etc/rega.conf -l ${LOGLEVEL_REGA}
  waitStartupComplete
}

stop() {
  echo -n "Stopping ReGaHss: "

  if [[ -f ${PIDFILE} ]]; then

    # as ReGaHss is not saving its config upon termination we force a final
    # config save now
    echo -n "."
    echo "load tclrega.so; rega system.Save()" | /bin/tclsh 2>/dev/null
    sync

    # signal ReGaHss to stop
    start-stop-daemon -K -q -p ${PIDFILE}

    # wait for ReGaHss to terminate
    waitTerminationComplete
    rm -f ${PIDFILE}
  else
    echo "OK"
  fi
}

restart() {
  stop
  start
}

case "$1" in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart|reload)
    restart
  ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
esac

exit $?
