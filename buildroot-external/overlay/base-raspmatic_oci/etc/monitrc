set init
set daemon 13
set log syslog
set statefile /var/run/monit.state
set idfile /usr/local/etc/monit.id

set httpd unixsocket /var/run/monit.sock
    allow localhost

# hss_led service monitoring
check process hss_led with pidfile /var/run/hss_led.pid
    group homematic
    start = "/sbin/start-stop-daemon -S -q -b -m -p /var/run/hss_led.pid --exec /bin/hss_led -- -l 6"
    stop = "/sbin/start-stop-daemon -K -q -p /var/run/hss_led.pid"
    #if failed port 8182 type udp for 5 cycles then restart
    if not exist for 1 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'hss_led restarted' WatchDog-Alarm"
    depends on hmlangwDisabled

# syslog daemon monitoring
check process syslogd with pidfile /var/run/syslogd.pid
    group system
    start = "/etc/init.d/S07logging start"
    stop = "/etc/init.d/S07logging stop"
    restart = "/etc/init.d/S07logging restart"
    if not exist for 1 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'syslogd restarted' WatchDog-Alarm"

# udev daemon monitoring
check process udevd with matching /sbin/udevd
    group system
    start = "/etc/init.d/S10udev start"
    stop = "/etc/init.d/S10udev stop"
    if not exist for 1 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'udevd restarted' WatchDog-Alarm"

# irqbalance daemon monitoring
check process irqbalance with pidfile /var/run/irqbalance.pid
    group system
    start = "/etc/init.d/S13irqbalance start"
    stop = "/etc/init.d/S13irqbalance stop"
    restart = "/etc/init.d/S13irqbalance restart"
    if not exist for 1 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'irqbalance restarted' WatchDog-Alarm"
    depends on irqbalanceEnabled

check program irqbalanceEnabled with path /bin/sh -c "/usr/bin/test $(nproc) -gt 1"
    group system
    if status != 0 for 1 cycles then unmonitor

# eq3config daemon monitoring
check process eq3configd with pidfile /var/run/eq3configd.pid
    group homematic
    start = "/etc/init.d/S50eq3configd start"
    stop = "/etc/init.d/S50eq3configd stop"
    restart = "/etc/init.d/S50eq3configd restart"
    if not exist for 1 cycles then restart
    if failed port 43439 type udp for 5 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'eq3configd restarted' WatchDog-Alarm"

# lighttpd web server daemon monitoring
check process lighttpd with pidfile /var/run/lighttpd-angel.pid
    group system
    start = "/etc/init.d/S50lighttpd start"
    stop = "/etc/init.d/S50lighttpd stop"
    restart = "/etc/init.d/S50lighttpd restart"
    if not exist for 1 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'lighttpd restarted' WatchDog-Alarm"
    if failed port 443 and certificate valid > 30 days for 5 cycles then
      exec "/bin/triggerAlarm.tcl 'HTTPS certificate expiring in < 30 days' WatchDog-Alarm"
    if failed port 80 for 5 cycles then restart
    if failed port 443 for 5 cycles then restart
    if failed port 1999 for 5 cycles then restart
    if failed port 2000 for 5 cycles then restart
    if failed port 2001 for 5 cycles then restart
    if failed port 2010 for 5 cycles then restart
    if failed port 8181 for 5 cycles then restart
    if failed port 9292 for 5 cycles then restart
    if failed port 41999 for 5 cycles then restart
    if failed port 42000 for 5 cycles then restart
    if failed port 42001 for 5 cycles then restart
    if failed port 42010 for 5 cycles then restart
    if failed port 48181 for 5 cycles then restart
    if failed port 49292 for 5 cycles then restart
    depends hmlangwDisabled

# ssdpd UPnP daemon monitoring
check process ssdpd with pidfile /var/run/ssdpd.pid
    group homematic
    start = "/etc/init.d/S50ssdpd start"
    stop = "/etc/init.d/S50ssdpd stop"
    restart = "/etc/init.d/S50ssdpd restart"
    if not exist for 1 cycles then restart
    if failed port 1900 type udp for 5 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'ssdpd restarted' WatchDog-Alarm"

# ssh daemon monitoring
check process sshd with pidfile /var/run/sshd.pid
    group system
    start = "/etc/init.d/S50sshd start"
    stop = "/etc/init.d/S50sshd stop"
    restart = "/etc/init.d/S50sshd restart"
    if not exist for 1 cycles then restart
    #if failed port 22 for 5 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'sshd restarted' WatchDog-Alarm"
    depends on sshdEnabled

check program sshdEnabled with path "/usr/bin/test -f /etc/config/sshEnabled"
    group system
    if status != 0 for 1 cycles then unmonitor

# hs485 (BidCos-Wired) daemon monitoring
check process hs485d with pidfile /var/run/hs485dLoader.pid
    group homematic
    start = "/etc/init.d/S60hs485d start"
    stop = "/etc/init.d/S60hs485d stop"
    restart = "/etc/init.d/S60hs485d restart"
    if not exist for 1 cycles then restart
    if failed port 32000 for 5 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'hs485d restarted' WatchDog-Alarm"
    depends on hs485dEnabled, hmlangwDisabled

check program hs485dEnabled with path "/bin/grep -q '^\[Interface .\]' /var/etc/hs485d.conf"
    group homematic
    if status != 0 for 1 cycles then unmonitor

# multimac daemon monitoring
check process multimacd with pidfile /var/run/multimacd.pid
    group homematic
    start = "/etc/init.d/S60multimacd start"
    stop = "/etc/init.d/S60multimacd stop"
    restart = "/etc/init.d/S60multimacd restart"
    if not exist for 1 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'multimacd restarted' WatchDog-Alarm"
    depends on multimacdEnabled, hmlangwDisabled

check program multimacdEnabled with path "/usr/bin/test -f /var/etc/multimacd.conf"
    group homematic
    if status != 0 for 1 cycles then unmonitor

# hmlangw software emulation daemon monitoring
check process hmlangw with pidfile /var/run/hmlangw.pid
    group homematic
    start = "/etc/init.d/S61hmlangw start"
    stop = "/etc/init.d/S61hmlangw stop"
    restart = "/etc/init.d/S61hmlangw restart"
    if not exist for 1 cycles then restart
    depends on hmlangwEnabled

check program hmlangwEnabled with path "/usr/bin/test -e /usr/local/HMLGW"
    group system
    if status != 0 for 1 cycles then unmonitor

check program hmlangwDisabled with path "/usr/bin/test -e /usr/local/HMLGW"
    group system
    if status = 0 for 1 cycles then unmonitor

# rfd (BidCos-RF) daemon monitoring
check process rfd with pidfile /var/run/rfd.pid
    group homematic
    start = "/etc/init.d/S61rfd start"
    stop = "/etc/init.d/S61rfd stop"
    restart = "/etc/init.d/S61rfd restart"
    if not exist for 1 cycles then restart
    if failed port 32001 for 5 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'rfd restarted' WatchDog-Alarm"
    depends on rfdEnabled, hmlangwDisabled

check program rfdEnabled with path "/bin/grep -q '^\[Interface .\]' /var/etc/rfd.conf"
    group homematic
    if status != 0 for 1 cycles then unmonitor

# HMIPServer (HmIP-RF/HmIP-Wired) daemon monitoring
check process HMIPServer with pidfile /var/run/HMIPServer.pid
    group homematic
    start = "/etc/init.d/S62HMServer start"
    stop = "/etc/init.d/S62HMServer stop"
    restart = "/etc/init.d/S62HMServer restart"
    if not exist for 1 cycles then restart
    #if failed port 9293 for 5 cycles then restart
    #if failed port 32010 for 5 cycles then restart
    if failed port 39292 for 5 cycles then restart
    #if failed port 43438 type udp for 5 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'HMIPServer restarted' WatchDog-Alarm"
    depends on hmlangwDisabled

# ReGaHss logic engine daemon monitoring
check process ReGaHss with pidfile /var/run/ReGaHss.pid
    group homematic
    start = "/etc/init.d/S70ReGaHss start"
    stop = "/etc/init.d/S70ReGaHss stop"
    restart = "/etc/init.d/S70ReGaHss restart"
    if not exist for 1 cycles then restart
    if failed port 8183 protocol http for 5 cycles then restart
    if failed port 31999 for 5 cycles then restart
    if failed port 1998 type udp for 5 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'ReGaHss restarted' WatchDog-Alarm"
    depends on hmlangwDisabled

# cronjob daemon monitoring
check process crond with pidfile /var/run/crond.pid
    group system
    start = "/etc/init.d/S98crond start"
    stop = "/etc/init.d/S98crond stop"
    restart = "/etc/init.d/S98crond restart"
    if not exist for 1 cycles then restart
    if 1 restart within 1 cycles then
      exec "/bin/triggerAlarm.tcl 'crond restarted' WatchDog-Alarm"

# system cpu/memory monitoring
check system $HOST
    group system
    if cpu usage > 95% for 24 cycles then
      exec "/bin/triggerAlarm.tcl 'high CPU usage (>95%) detected' WatchDog-Alarm"
    if memory usage > 95% for 24 cycles then
      exec "/bin/triggerAlarm.tcl 'high memory usage (>95%) detected' WatchDog-Alarm"

# filesystem space monitoring
check filesystem rootfs with path /
    group system
    if space usage > 95% for 5 cycles then
      exec "/bin/triggerAlarm.tcl 'rootfs (/) running low on disk space' WatchDog-Alarm"

check filesystem userfs with path /usr/local
    group system
    if space usage > 95% for 5 cycles then
      exec "/bin/triggerAlarm.tcl 'userfs (/usr/local) running low on disk space' WatchDog-Alarm"

check filesystem usb1 with path /media/usb1
    group system
    if space usage > 95% for 5 cycles then
      exec "/bin/triggerAlarm.tcl 'usb1 (/media/usb1) running low on disk space' WatchDog-Alarm"
    depends on hasUSB

check program hasUSB with path "/usr/bin/test -e /var/status/hasUSB"
    group system
    if status != 0 for 5 cycles then unmonitor

# check system temperature limits
check program temperature with path /bin/sh -c "(cat /sys/class/thermal/thermal_zone0/temp 2>/dev/null || echo 0) | awk '{ print $1/1000; if($1/1000 < 80.0) { exit 10 } else { exit 20 } }';"
    group system
    if status != 10 for 5 cycles then
      exec "/bin/triggerAlarm.tcl 'high system temperature (> 80 deg) detected' WatchDog-Alarm"

# internet connectivity monitoring
check program internetCheck with path "/usr/bin/test -e /var/status/hasInternet"
    group system
    if status != 0 for 24 cycles then
      exec "/bin/triggerAlarm.tcl 'No internet connection detected' WatchDog-Alarm"
    depends on internetCheckEnabled

check program internetCheckEnabled with path "/usr/bin/test -e /etc/config/internetCheckDisabled"
    group system
    if status == 0 for 1 cycles then unmonitor

# check for a non-empty /tmp/badblocks.txt file and warn the user accordingly
check program badblocksCheck with path "/usr/bin/test -s /tmp/badblocks.txt"
    group systen
    if status = 0 for 1 cycles then
      exec "/bin/triggerAlarm.tcl 'Bad blocks on main disk device detected' WatchDog-Alarm"
    depends on crond

# check for an unclean shutdown by checking for /var/status/uncleanShutdown
check program uncleanShutdownCheck with path "/usr/bin/test -e /var/status/uncleanShutdown"
    group systen
    if status = 0 for 1 cycles then
      exec /bin/sh -c "/bin/triggerAlarm.tcl 'Unclean shutdown or system crash identified' WatchDog-Alarm ; rm -f /var/status/uncleanShutdown"

# include user-defined configuration files
include /usr/local/etc/monit*.cfg
